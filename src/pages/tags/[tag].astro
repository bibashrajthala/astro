---
import BlogPost from "@/components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

import type {
  // InferGetStaticParamsType,
  // InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";

export interface Frontmatter {
  title: string;
  tags: string[];
  author: string;
  description: string;
  image: {
    url: string;
    alt: string;
  };
  pubDate: Date;
}

type Post = {
  url: string;
  frontmatter: Frontmatter;
};

interface Props {
  posts: Post[];
}
export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = await Astro.glob<Frontmatter>("../posts/*.md");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
};

// type StaticPathsType = InferGetStaticParamsType<typeof getStaticPaths>;
// type StaticPropsType = InferGetStaticPropsType<typeof getStaticPaths>;

type StaticPathsType = { tag: string };

const { tag } = Astro.params as StaticPathsType;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts?.map((post) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
